package DB;
import java.sql.*;
import java.util.Scanner;


import ResourceManagment.HumanResource;
import ResourceManagment.Job;
import ResourceManagment.Subsystem;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;



public class Driver {

	private static Driver self = null;
	private File dbDescriptor = null;
	private Connection connect = null;

	public static final String TAG_DATABASE = "database";
	public static final String TAG_TABLE = "table";
	public static final String TAG_CREATE_SUPER_USER = "creat_user";

	private static final String DB_URL = "jdbc:mysql://localhost:3306/";
	private static final String DATABASE_NAME = "simoorgh-managment-system";
	private static final String USER_NAME = "root";
	private static final String PASSWORD = "";
	private static final String COMMA_SEP = " ,\n ";

	

	public static Driver getInstance() {
		if (self == null) {
			return new Driver();
		}

		return self;
	}
	public Driver(){
		//		dbDescriptor = new File("db-config.txt");
		//		try {
		//			if (!dbDescriptor.exists()) {
		//				dbDescriptor.createNewFile();
		//			}
		//
		//		} catch (IOException e) {
		//			// TODO Auto-generated catch block
		//			e.printStackTrace();
		//		}

		try {
			// This will load the MySQL driver, each DB has its own driver
			Class.forName("com.mysql.jdbc.Driver");
			
			// Setup the connection with the DB
			connect = DriverManager.getConnection(DB_URL, USER_NAME, PASSWORD);

		} catch (ClassNotFoundException | SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}


	}

	private boolean exeSQL(String syntax) {
		try {
			System.out.println("try1");
			PreparedStatement preparedStatement = connect
					.prepareStatement(syntax);
			
			System.out.println("try2");
//			preparedStatement.executeUpdate();
			System.out.println("try3");
			return true;

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			System.out.println("catch1");
			e.printStackTrace();
			return false;
		}
	}


	
	
	
	public boolean contains(String tag) {
		return find(tag);
	}

	public boolean contains(String tag, String value) {
		return find(tag + ": " + value);
	}

	private boolean find(String query) {
		try {
			Scanner scanner = new Scanner(dbDescriptor);

			// now read the file line by line...
			while (scanner.hasNextLine()) {
				String line = scanner.nextLine();
				if (line.contains(query)) {
					return true;
				}
			}

			scanner.close();

		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}

		return false;
	}
	
	public void close() {
		try {
			if (connect != null)
				connect.close();

		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void insertHumanResource(HumanResource hr) {
		try {
			String command = "INSERT INTO " +DATABASE_NAME+"."+ "human-resource" + " VALUES ("
					+ hr.firstName+","+hr.lastName+","+ hr.melliNo +","+hr.employeeNo+","
					+ hr.job.toString()+","+hr.subsystem.toString()+","
					+hr.StartDate+")";
			// PreparedStatements can use variables and are more efficient
			Statement statment = connect.createStatement();
			System.out.println(statment);
			statment.executeUpdate(command);


		} catch (SQLException e) {
			e.printStackTrace();
		}

		
	}

	public static void main(String[] args) {
	}
	
}


